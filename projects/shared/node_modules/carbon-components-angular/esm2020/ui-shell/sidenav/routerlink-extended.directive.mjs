import { Directive, Input } from "@angular/core";
import { RouterLinkWithHref } from "@angular/router";
import keys from "lodash-es/keys";
import * as i0 from "@angular/core";
export class RouterLinkExtendedDirective extends RouterLinkWithHref {
    ngOnChanges(changes) {
        if (changes.routeExtras && this.routeExtras) {
            keys(this.routeExtras).forEach(routeExtraProperty => this[routeExtraProperty] = this.routeExtras[routeExtraProperty]);
        }
        super.ngOnChanges(changes);
    }
}
RouterLinkExtendedDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: RouterLinkExtendedDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
RouterLinkExtendedDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "14.3.0", type: RouterLinkExtendedDirective, selector: "[routerLink]", inputs: { routeExtras: "routeExtras" }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: RouterLinkExtendedDirective, decorators: [{
            type: Directive,
            args: [{
                    // tslint:disable-next-line
                    selector: "[routerLink]"
                }]
        }], propDecorators: { routeExtras: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVybGluay1leHRlbmRlZC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvdWktc2hlbGwvc2lkZW5hdi9yb3V0ZXJsaW5rLWV4dGVuZGVkLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBNEIsTUFBTSxlQUFlLENBQUM7QUFDM0UsT0FBTyxFQUFvQixrQkFBa0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZFLE9BQU8sSUFBSSxNQUFNLGdCQUFnQixDQUFDOztBQU1sQyxNQUFNLE9BQU8sMkJBQTRCLFNBQVEsa0JBQWtCO0lBSWxFLFdBQVcsQ0FBQyxPQUFzQjtRQUNqQyxJQUFJLE9BQU8sQ0FBQyxXQUFXLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRTtZQUM1QyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUM7U0FDdEg7UUFFRCxLQUFLLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzVCLENBQUM7O3dIQVZXLDJCQUEyQjs0R0FBM0IsMkJBQTJCOzJGQUEzQiwyQkFBMkI7a0JBSnZDLFNBQVM7bUJBQUM7b0JBQ1YsMkJBQTJCO29CQUMzQixRQUFRLEVBQUUsY0FBYztpQkFDeEI7OEJBR1MsV0FBVztzQkFBbkIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBOYXZpZ2F0aW9uRXh0cmFzLCBSb3V0ZXJMaW5rV2l0aEhyZWYgfSBmcm9tIFwiQGFuZ3VsYXIvcm91dGVyXCI7XG5pbXBvcnQga2V5cyBmcm9tIFwibG9kYXNoLWVzL2tleXNcIjtcblxuQERpcmVjdGl2ZSh7XG5cdC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZVxuXHRzZWxlY3RvcjogXCJbcm91dGVyTGlua11cIlxufSlcbmV4cG9ydCBjbGFzcyBSb3V0ZXJMaW5rRXh0ZW5kZWREaXJlY3RpdmUgZXh0ZW5kcyBSb3V0ZXJMaW5rV2l0aEhyZWYgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuXHQvLyBUT0RPOiBDaGFuZ2UgUm91dGVyTGlua1dpdGhIcmVmIHdpdGggUm91dGVyTGluayBmcm9tIGFuZ3VsYXIgMTUgc2luY2UgUm91dGVyTGlua1dpdGhIcmVmIGhhcyBiZWVuIGRlcHJlY2F0ZWRcblx0QElucHV0KCkgcm91dGVFeHRyYXM6IE5hdmlnYXRpb25FeHRyYXM7XG5cblx0bmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuXHRcdGlmIChjaGFuZ2VzLnJvdXRlRXh0cmFzICYmIHRoaXMucm91dGVFeHRyYXMpIHtcblx0XHRcdGtleXModGhpcy5yb3V0ZUV4dHJhcykuZm9yRWFjaChyb3V0ZUV4dHJhUHJvcGVydHkgPT4gdGhpc1tyb3V0ZUV4dHJhUHJvcGVydHldID0gdGhpcy5yb3V0ZUV4dHJhc1tyb3V0ZUV4dHJhUHJvcGVydHldKTtcblx0XHR9XG5cblx0XHRzdXBlci5uZ09uQ2hhbmdlcyhjaGFuZ2VzKTtcblx0fVxufVxuIl19