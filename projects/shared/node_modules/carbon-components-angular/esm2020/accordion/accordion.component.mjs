import { Component, Input, ContentChildren } from "@angular/core";
import { AccordionItem } from "./accordion-item.component";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
/**
 * Get started with importing the module:
 *
 * ```typescript
 * import { AccordionModule } from 'carbon-components-angular';
 * ```
 *
 * [See demo](../../?path=/story/components-accordion--basic)
 */
export class Accordion {
    constructor() {
        /**
         * Sets the alignment of the chevron icon
         */
        this.align = "end";
        /**
         *	@todo remove `cds--accordion--${size}` classes in v12
         */
        /**
         * Sets the size of all accordian items
         */
        this.size = "md";
        this._skeleton = false;
    }
    set skeleton(value) {
        this._skeleton = value;
        this.updateChildren();
    }
    get skeleton() {
        return this._skeleton;
    }
    ngAfterContentInit() {
        this.updateChildren();
    }
    updateChildren() {
        if (this.children) {
            this.children.toArray().forEach(child => child.skeleton = this.skeleton);
        }
    }
}
Accordion.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: Accordion, deps: [], target: i0.ɵɵFactoryTarget.Component });
Accordion.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: Accordion, selector: "cds-accordion, ibm-accordion", inputs: { align: "align", size: "size", skeleton: "skeleton" }, queries: [{ propertyName: "children", predicate: AccordionItem }], ngImport: i0, template: `
		<div class="cds--accordion"
			[ngClass]="{
				'cds--accordion--end': align === 'end',
				'cds--accordion--start': align === 'start',
				'cds--accordion--sm': size === 'sm',
				'cds--accordion--md': size ==='md',
				'cds--accordion--lg': size === 'lg',
				'cds--layout--size-sm': size === 'sm',
				'cds--layout--size-md': size === 'md',
				'cds--layout--size-lg': size === 'lg'
			}"
			role="list">
			<ng-content></ng-content>
		</div>
	`, isInline: true, dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: Accordion, decorators: [{
            type: Component,
            args: [{
                    selector: "cds-accordion, ibm-accordion",
                    template: `
		<div class="cds--accordion"
			[ngClass]="{
				'cds--accordion--end': align === 'end',
				'cds--accordion--start': align === 'start',
				'cds--accordion--sm': size === 'sm',
				'cds--accordion--md': size ==='md',
				'cds--accordion--lg': size === 'lg',
				'cds--layout--size-sm': size === 'sm',
				'cds--layout--size-md': size === 'md',
				'cds--layout--size-lg': size === 'lg'
			}"
			role="list">
			<ng-content></ng-content>
		</div>
	`
                }]
        }], propDecorators: { align: [{
                type: Input
            }], size: [{
                type: Input
            }], children: [{
                type: ContentChildren,
                args: [AccordionItem]
            }], skeleton: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hY2NvcmRpb24vYWNjb3JkaW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULEtBQUssRUFDTCxlQUFlLEVBR2YsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDRCQUE0QixDQUFDOzs7QUFFM0Q7Ozs7Ozs7O0dBUUc7QUFvQkgsTUFBTSxPQUFPLFNBQVM7SUFuQnRCO1FBb0JDOztXQUVHO1FBQ00sVUFBSyxHQUFvQixLQUFLLENBQUM7UUFFeEM7O1dBRUc7UUFDSDs7V0FFRztRQUNNLFNBQUksR0FBdUIsSUFBSSxDQUFDO1FBSS9CLGNBQVMsR0FBRyxLQUFLLENBQUM7S0FxQjVCO0lBbkJBLElBQ0ksUUFBUSxDQUFDLEtBQVU7UUFDdEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7UUFDdkIsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxJQUFJLFFBQVE7UUFDWCxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDdkIsQ0FBQztJQUVELGtCQUFrQjtRQUNqQixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUVTLGNBQWM7UUFDdkIsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2xCLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDekU7SUFDRixDQUFDOztzR0FwQ1csU0FBUzswRkFBVCxTQUFTLDZKQWNKLGFBQWEsNkJBL0JwQjs7Ozs7Ozs7Ozs7Ozs7O0VBZVQ7MkZBRVcsU0FBUztrQkFuQnJCLFNBQVM7bUJBQUM7b0JBQ1YsUUFBUSxFQUFFLDhCQUE4QjtvQkFDeEMsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7RUFlVDtpQkFDRDs4QkFLUyxLQUFLO3NCQUFiLEtBQUs7Z0JBUUcsSUFBSTtzQkFBWixLQUFLO2dCQUUwQixRQUFRO3NCQUF2QyxlQUFlO3VCQUFDLGFBQWE7Z0JBSzFCLFFBQVE7c0JBRFgsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG5cdENvbXBvbmVudCxcblx0SW5wdXQsXG5cdENvbnRlbnRDaGlsZHJlbixcblx0UXVlcnlMaXN0LFxuXHRBZnRlckNvbnRlbnRJbml0XG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBBY2NvcmRpb25JdGVtIH0gZnJvbSBcIi4vYWNjb3JkaW9uLWl0ZW0uY29tcG9uZW50XCI7XG5cbi8qKlxuICogR2V0IHN0YXJ0ZWQgd2l0aCBpbXBvcnRpbmcgdGhlIG1vZHVsZTpcbiAqXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBBY2NvcmRpb25Nb2R1bGUgfSBmcm9tICdjYXJib24tY29tcG9uZW50cy1hbmd1bGFyJztcbiAqIGBgYFxuICpcbiAqIFtTZWUgZGVtb10oLi4vLi4vP3BhdGg9L3N0b3J5L2NvbXBvbmVudHMtYWNjb3JkaW9uLS1iYXNpYylcbiAqL1xuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiBcImNkcy1hY2NvcmRpb24sIGlibS1hY2NvcmRpb25cIixcblx0dGVtcGxhdGU6IGBcblx0XHQ8ZGl2IGNsYXNzPVwiY2RzLS1hY2NvcmRpb25cIlxuXHRcdFx0W25nQ2xhc3NdPVwie1xuXHRcdFx0XHQnY2RzLS1hY2NvcmRpb24tLWVuZCc6IGFsaWduID09PSAnZW5kJyxcblx0XHRcdFx0J2Nkcy0tYWNjb3JkaW9uLS1zdGFydCc6IGFsaWduID09PSAnc3RhcnQnLFxuXHRcdFx0XHQnY2RzLS1hY2NvcmRpb24tLXNtJzogc2l6ZSA9PT0gJ3NtJyxcblx0XHRcdFx0J2Nkcy0tYWNjb3JkaW9uLS1tZCc6IHNpemUgPT09J21kJyxcblx0XHRcdFx0J2Nkcy0tYWNjb3JkaW9uLS1sZyc6IHNpemUgPT09ICdsZycsXG5cdFx0XHRcdCdjZHMtLWxheW91dC0tc2l6ZS1zbSc6IHNpemUgPT09ICdzbScsXG5cdFx0XHRcdCdjZHMtLWxheW91dC0tc2l6ZS1tZCc6IHNpemUgPT09ICdtZCcsXG5cdFx0XHRcdCdjZHMtLWxheW91dC0tc2l6ZS1sZyc6IHNpemUgPT09ICdsZydcblx0XHRcdH1cIlxuXHRcdFx0cm9sZT1cImxpc3RcIj5cblx0XHRcdDxuZy1jb250ZW50PjwvbmctY29udGVudD5cblx0XHQ8L2Rpdj5cblx0YFxufSlcbmV4cG9ydCBjbGFzcyBBY2NvcmRpb24gaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcblx0LyoqXG5cdCAqIFNldHMgdGhlIGFsaWdubWVudCBvZiB0aGUgY2hldnJvbiBpY29uXG5cdCAqL1xuXHRASW5wdXQoKSBhbGlnbjogXCJzdGFydFwiIHwgXCJlbmRcIiA9IFwiZW5kXCI7XG5cblx0LyoqXG5cdCAqXHRAdG9kbyByZW1vdmUgYGNkcy0tYWNjb3JkaW9uLS0ke3NpemV9YCBjbGFzc2VzIGluIHYxMlxuXHQgKi9cblx0LyoqXG5cdCAqIFNldHMgdGhlIHNpemUgb2YgYWxsIGFjY29yZGlhbiBpdGVtc1xuXHQgKi9cblx0QElucHV0KCkgc2l6ZTogXCJzbVwiIHwgXCJtZFwiIHwgXCJsZ1wiID0gXCJtZFwiO1xuXG5cdEBDb250ZW50Q2hpbGRyZW4oQWNjb3JkaW9uSXRlbSkgY2hpbGRyZW46IFF1ZXJ5TGlzdDxBY2NvcmRpb25JdGVtPjtcblxuXHRwcm90ZWN0ZWQgX3NrZWxldG9uID0gZmFsc2U7XG5cblx0QElucHV0KClcblx0c2V0IHNrZWxldG9uKHZhbHVlOiBhbnkpIHtcblx0XHR0aGlzLl9za2VsZXRvbiA9IHZhbHVlO1xuXHRcdHRoaXMudXBkYXRlQ2hpbGRyZW4oKTtcblx0fVxuXG5cdGdldCBza2VsZXRvbigpOiBhbnkge1xuXHRcdHJldHVybiB0aGlzLl9za2VsZXRvbjtcblx0fVxuXG5cdG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcblx0XHR0aGlzLnVwZGF0ZUNoaWxkcmVuKCk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgdXBkYXRlQ2hpbGRyZW4oKSB7XG5cdFx0aWYgKHRoaXMuY2hpbGRyZW4pIHtcblx0XHRcdHRoaXMuY2hpbGRyZW4udG9BcnJheSgpLmZvckVhY2goY2hpbGQgPT4gY2hpbGQuc2tlbGV0b24gPSB0aGlzLnNrZWxldG9uKTtcblx0XHR9XG5cdH1cbn1cbiJdfQ==