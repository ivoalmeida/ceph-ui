/**
 *
 * carbon-angular v0.0.0 | password.directive.d.ts
 *
 * Copyright 2014, 2024 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Renderer2, ElementRef, AfterViewInit } from "@angular/core";
import * as i0 from "@angular/core";
export declare class PasswordInput implements AfterViewInit {
    protected elementRef: ElementRef;
    protected renderer: Renderer2;
    set type(type: string);
    passwordInputClass: boolean;
    /**
     * @todo - remove `cds--text-input--${size}` classes in v12
     */
    get isSizeSm(): boolean;
    get isSizeMd(): boolean;
    get isSizelg(): boolean;
    get sizeSm(): boolean;
    get sizeMd(): boolean;
    get sizelg(): boolean;
    get isLightTheme(): boolean;
    inputClass: boolean;
    invalid: boolean;
    warn: boolean;
    skeleton: boolean;
    /**
     * @deprecated since v5 - Use `cdsLayer` directive instead
     * `light` or `dark` input theme
     */
    theme: "light" | "dark";
    /**
     * Input field render size
     */
    size: "sm" | "md" | "lg";
    get getInvalidAttribute(): boolean;
    private _type;
    constructor(elementRef: ElementRef, renderer: Renderer2);
    ngAfterViewInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PasswordInput, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<PasswordInput, "[cdsPassword], [ibmPassword]", never, { "type": "type"; "invalid": "invalid"; "warn": "warn"; "skeleton": "skeleton"; "theme": "theme"; "size": "size"; }, {}, never, never, false>;
}
